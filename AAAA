PetscErrorCode DMPlexStratify(DM dm)
{
  DM_Plex       *mesh = (DM_Plex*) dm->data;
  DMLabel        label;
  PetscInt       pStart, pEnd, p;
  PetscInt       numRoots = 0, numLeaves = 0;

  PetscFunctionBegin;
  PetscValidHeaderSpecific(dm, DM_CLASSID, 1);
  PetscCall(PetscLogEventBegin(DMPLEX_Stratify,dm,0,0,0));

  /* Create depth label */
  PetscCall(DMPlexGetChart(dm, &pStart, &pEnd));
  PetscCall(DMCreateLabel(dm, "depth"));
  PetscCall(DMPlexGetDepthLabel(dm, &label));

  {
    /* Initialize roots and count leaves */
    PetscInt sMin = PETSC_MAX_INT;
    PetscInt sMax = PETSC_MIN_INT;
    PetscInt coneSize, supportSize;

    for (p = pStart; p < pEnd; ++p) {
      PetscCall(DMPlexGetConeSize(dm, p, &coneSize));
      PetscCall(DMPlexGetSupportSize(dm, p, &supportSize));
      if (!coneSize && supportSize) {
        sMin = PetscMin(p, sMin);
        sMax = PetscMax(p, sMax);
        ++numRoots;
      } else if (!supportSize && coneSize) {
        ++numLeaves;
      } else if (!supportSize && !coneSize) {
        /* Isolated points */
        sMin = PetscMin(p, sMin);
        sMax = PetscMax(p, sMax);
      }
    }
    PetscCall(DMPlexCreateDepthStratum(dm, label, 0, sMin, sMax+1));
  }

  if (numRoots + numLeaves == (pEnd - pStart)) {
    PetscInt sMin = PETSC_MAX_INT;
    PetscInt sMax = PETSC_MIN_INT;
    PetscInt coneSize, supportSize;

    for (p = pStart; p < pEnd; ++p) {
      PetscCall(DMPlexGetConeSize(dm, p, &coneSize));
      PetscCall(DMPlexGetSupportSize(dm, p, &supportSize));
      if (!supportSize && coneSize) {
        sMin = PetscMin(p, sMin);
        sMax = PetscMax(p, sMax);
      }
    }
    PetscCall(DMPlexCreateDepthStratum(dm, label, 1, sMin, sMax+1));
  } else {
    PetscInt level = 0;
    PetscInt qStart, qEnd, q;

    PetscCall(DMLabelGetStratumBounds(label, level, &qStart, &qEnd));
    while (qEnd > qStart) {
      PetscInt sMin = PETSC_MAX_INT;
      PetscInt sMax = PETSC_MIN_INT;

      for (q = qStart; q < qEnd; ++q) {
        const PetscInt *support;
        PetscInt        supportSize, s;

        PetscCall(DMPlexGetSupportSize(dm, q, &supportSize));
        PetscCall(DMPlexGetSupport(dm, q, &support));
        for (s = 0; s < supportSize; ++s) {
          sMin = PetscMin(support[s], sMin);
          sMax = PetscMax(support[s], sMax);
        }
      }
      PetscCall(DMLabelGetNumValues(label, &level));
      PetscCall(DMPlexCreateDepthStratum(dm, label, level, sMin, sMax+1));
      PetscCall(DMLabelGetStratumBounds(label, level, &qStart, &qEnd));
    }
  }
  { /* just in case there is an empty process */
    PetscInt numValues, maxValues = 0, v;

    PetscCall(DMLabelGetNumValues(label, &numValues));
    PetscCallMPI(MPI_Allreduce(&numValues,&maxValues,1,MPIU_INT,MPI_MAX,PetscObjectComm((PetscObject)dm)));
    for (v = numValues; v < maxValues; v++) {
      PetscCall(DMLabelAddStratum(label, v));
    }
  }
  PetscCall(PetscObjectStateGet((PetscObject) label, &mesh->depthState));
  PetscCall(PetscLogEventEnd(DMPLEX_Stratify,dm,0,0,0));
  PetscFunctionReturn(0);
