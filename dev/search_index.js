var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"functions","title":"API","text":"","category":"section"},{"location":"api/#Sim","page":"functions","title":"Sim","text":"","category":"section"},{"location":"api/#CGDycore.Grids.Edge","page":"functions","title":"CGDycore.Grids.Edge","text":"Edge()\n\nThis is my documentation\n\n\n\n\n\n","category":"type"},{"location":"MassMatrix/#Massmatrix","page":"Mass Matrix","title":"Massmatrix","text":"","category":"section"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"The mass matrix represents the inner product in the discretized function space.","category":"page"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"For efficiency, we avoid explicitly assembling the mass matrix and instead","category":"page"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"apply its action directly to fields.","category":"page"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"In Julia, this is often achieved using matrix-free methods and","category":"page"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"broadcasting, enabling efficient and flexible computations.","category":"page"},{"location":"MassMatrix/","page":"Mass Matrix","title":"Mass Matrix","text":"The mass matrix acts as a \"pseudo-operator\": it cannot be called directly, but can be applied to fields in a manner similar to other operators, leveraging broadcasting for performance and composability.","category":"page"},{"location":"MassMatrix/#MassMatrix-with-HCurlElement","page":"Mass Matrix","title":"MassMatrix with HCurlElement","text":"","category":"section"},{"location":"MassMatrix/#CGDycore.FEMSei.MassMatrix","page":"Mass Matrix","title":"CGDycore.FEMSei.MassMatrix","text":"MassMatrix\n\nAssembles the global mass matrix for a finite element discretization using H(curl) elements.\n\nArguments\n\nbackend: Computational backend to use (e.g., CPU, GPU).\nFTB: Finite element basis or transformation object.\nFe::HCurlElement: The finite element object containing basis functions and related data for H(curl) elements.\nGrid: The computational grid or mesh structure containing faces and geometry information.\nQuadOrd: The order of the quadrature rule to use for numerical integration.\nJacobi: Function that computes the Jacobian, its determinant, and pseudo-inverse for mapping reference to physical elements.\n\nReturns\n\nM: The assembled sparse global mass matrix as a SparseMatrixCSC.\n\nDescription\n\nFor each face in the grid, the function computes the local mass matrix by integrating the inner product of the mapped basis functions over the reference element using a specified quadrature rule. The local contributions are then assembled into the global sparse mass matrix. Only non-negligible entries (greater than 1.e-6 in magnitude) are included in the global matrix.\n\nNotes\n\nThe function assumes that the basis functions and their mapping are provided in the Fe object.\nThe Jacobian and its pseudo-inverse are used to map basis functions from the reference to the physical element.\nThe function is tailored for H(curl) elements and may require adaptation for other element types.\n\n\n\n\n\n","category":"function"},{"location":"newfile/#This-is-a-new-file","page":"New file","title":"This is a new file","text":"","category":"section"},{"location":"#This-is-my-first-page","page":"Home","title":"This is my first page","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is my first sentence.","category":"page"}]
}
